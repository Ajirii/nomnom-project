generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId        String         @id @default(uuid())
  name          String
  email         String         @unique
  googleId      String         @unique
  currency      Int            @default(0)
  hunger        Int            @default(100)

  quests        Quest[]
  userCosmetics UserCosmetic[]
  UserQuest     UserQuest[]
  recipes       Recipe[]
}

model Recipe {
  recipeId       String   @id @default(uuid())
  title          String
  ingredients    String[]
  instructions   String[]
  cookingMinutes Int
  servings       Int
  cuisine        String
  notes          String
  favorite       Boolean  @default(false)
  user           User? @relation(fields: [createdBy], references: [userId])
  createdBy      String? @default("system")
  createdAt      DateTime @default(now())
}

model Quest {
  questId     String @id @default(uuid())
  title       String
  description String
  rewardCurrency Int @default(0)
  rewardHunger   Int @default(0)

  userQuests  UserQuest[]
  User        User?       @relation(fields: [userUserId], references: [userId])
  userUserId  String?
}

model UserQuest {
  userQuestId String   @id @default(uuid())
  userId      String
  questId     String
  completedAt DateTime @default(now())

  user  User  @relation(fields: [userId], references: [userId])
  quest Quest @relation(fields: [questId], references: [questId])
}


model Cosmetic {
  cosmeticId     String         @id @default(uuid())
  name           String
  description    String
  iconUrl        String?
  price          Int

  userCosmetics  UserCosmetic[]
}

model UserCosmetic {
  userCid    String @id @default(uuid())
  userId     String
  cosmeticId String

  user     User     @relation(fields: [userId], references: [userId])
  cosmetic Cosmetic @relation(fields: [cosmeticId], references: [cosmeticId])

  @@unique([userId, cosmeticId])
}
